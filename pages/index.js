import { useState, useEffect } from "react";
import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import ContactCard from "../component/contactlist";
import { getDownloadURL, ref } from "firebase/storage";
import { storage } from "../firebase";
import { Button, Typography } from "@mui/material";
import { useRouter } from "next/router";
import LinearLoader from "../component/loader/LinearLoader";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  let [contactList, setContactList] = useState([]);
  const [loding, setLoding] = useState(false);

  const router = useRouter();

  useEffect(() => {

    let list =
      JSON.parse(localStorage.getItem("contactList"))?.length > 0
        ? JSON.parse(localStorage.getItem("contactList"))
        : [];

    if (list?.length < 1 || contactList.length === list.length) return;

    setLoding(true);

    list.forEach((item) => {
      const imageRef = ref(storage, `images/${item?.name}`);
      if (imageRef._location.path_.includes("images/undefined")) {
        setContactList((prev) => [...prev, item]);
      } else {
        getDownloadURL(imageRef).then((url) => {
          console.log("item", item, "url", url);
          setContactList((prev) => [...prev, { ...item, url }]);
        });
      }
    });

    setLoding(false);

    return () => {
      setContactList([]);
    };
  }, []);

  let deleteContact = (data) => {
    setLoding(true);
    if (window.confirm("Do you want to delete the contact detail?") == true) {
      let rem = contactList.filter((el) => el.name !== data);
      setContactList(rem);
      localStorage.setItem("contactList", JSON.stringify(rem));
      setLoding(false);
    }
    setLoding(false);
  };

  return (
    <>
      <Head>
        <title>Contact App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {loding && <LinearLoader />}
        <Button variant="contained" onClick={() => router.push("/add-contact")}>
          Add new contact
        </Button>
        {
        contactList.length>0 ? (
          contactList.sort().map((el) => (
            <ContactCard deleteContact={deleteContact} detail={el} />
          ))
        ) : (
          <Typography
            component="h1"
            variant="h5"
            sx={{ color: "black !important" }}
          >
            No contact available.
          </Typography>
        )
        }
      </main>
    </>
  );
}
