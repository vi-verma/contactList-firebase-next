import { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import ContactCard from "../component/contactlist";
import { getDownloadURL, ref } from "firebase/storage";
import { storage } from "../firebase";
import { Button, Typography } from "@mui/material";
import { useRouter } from "next/router";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  let [contactList, setContactList] = useState([]);
  //  const [imageList, setImageList] = useState([]);

  const router = useRouter();

  useEffect(() => {
    console.count('count')
    console.log('ccccccccccc')
    let list =
      JSON.parse(localStorage.getItem("contactList"))?.length > 0
        ? JSON.parse(localStorage.getItem("contactList"))
        : [{}];
    console.log("list", list.length, "contactList.length", contactList.length);

    if (list?.length < 1 || contactList.length === list.length) return;

    list.forEach((item) => {
      const imageRef = ref(storage, `images/${item?.name}`);
      console.log("imageRef", imageRef);
      getDownloadURL(imageRef).then((url) => {
        console.log("item", item, 'url', url);

        setContactList(prev => [...prev, { ...item, url }]);
      });
    });

    return() => {
      setContactList([])
    };
  }, []);

  console.log("contactlist", contactList);

  let deleteContact = (data) => {
    if (window.confirm("Do you want to delete the contact detail?") == true) {
      let rem = contactList.filter((el) => el.name !== data);
      setContactList(rem);
      localStorage.setItem("contactList", JSON.stringify(rem));
    }
  };

  return (
    <>
      <Head>
        <title>Contact App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Button onClick={() => router.push("/add-contact")}>
          Add new contact
        </Button>
        {/* <div className={styles.center}> */}
        {contactList.length ? (
          contactList.map((el) => <ContactCard deleteContact={deleteContact} detail={el} />)
        ) : (
          <Typography
            component="h1"
            variant="h5"
            sx={{ color: "black !important" }}
          >
            No contact available.
          </Typography>
        )}

        {/* </div> */}
      </main>
    </>
  );
}
